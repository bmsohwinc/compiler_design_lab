Enter strings...
Found         MAIN: 	TokenID =   1	TokenTypeID = 23	lexeme = main
Found    SEPARATOR: 	TokenID =   2	TokenTypeID = 13	lexeme = (
Found    SEPARATOR: 	TokenID =   3	TokenTypeID = 14	lexeme = )
Found    SEPARATOR: 	TokenID =   4	TokenTypeID = 15	lexeme = {
Found     DATATYPE: 	TokenID =   5	TokenTypeID = 17	lexeme = int
Found   IDENTIFIER: 	TokenID =   6	TokenTypeID = 27	lexeme = i
Found        RELOP: 	TokenID =   7	TokenTypeID =  5	lexeme = =
Found       NUMBER: 	TokenID =   8	TokenTypeID = 26	lexeme = 0
Found    SEPARATOR: 	TokenID =   9	TokenTypeID = 11	lexeme = ;
Found     DATATYPE: 	TokenID =  10	TokenTypeID = 17	lexeme = int
Found   IDENTIFIER: 	TokenID =  11	TokenTypeID = 27	lexeme = n
Found        RELOP: 	TokenID =  12	TokenTypeID =  5	lexeme = =
Found       NUMBER: 	TokenID =  13	TokenTypeID = 26	lexeme = 10
Found    SEPARATOR: 	TokenID =  14	TokenTypeID = 11	lexeme = ;
Found     DATATYPE: 	TokenID =  15	TokenTypeID = 17	lexeme = int
Found   IDENTIFIER: 	TokenID =  16	TokenTypeID = 27	lexeme = sum
Found        RELOP: 	TokenID =  17	TokenTypeID =  5	lexeme = =
Found       NUMBER: 	TokenID =  18	TokenTypeID = 26	lexeme = 0
Found    SEPARATOR: 	TokenID =  19	TokenTypeID = 11	lexeme = ;
Found     DATATYPE: 	TokenID =  20	TokenTypeID = 18	lexeme = float
Found   IDENTIFIER: 	TokenID =  21	TokenTypeID = 27	lexeme = op
Found        RELOP: 	TokenID =  22	TokenTypeID =  5	lexeme = =
Found       NUMBER: 	TokenID =  23	TokenTypeID = 26	lexeme = 1.5
Found    SEPARATOR: 	TokenID =  24	TokenTypeID = 11	lexeme = ;
Found  CONDITIONAL: 	TokenID =  25	TokenTypeID = 24	lexeme = if
Found    SEPARATOR: 	TokenID =  26	TokenTypeID = 13	lexeme = (
Found    IN/OUTPUT: 	TokenID =  27	TokenTypeID = 19	lexeme = read
Found    SEPARATOR: 	TokenID =  28	TokenTypeID = 13	lexeme = (
Found   IDENTIFIER: 	TokenID =  29	TokenTypeID = 27	lexeme = x
Found    SEPARATOR: 	TokenID =  30	TokenTypeID = 14	lexeme = )
Found        RELOP: 	TokenID =  31	TokenTypeID =  1	lexeme = <
Found        RELOP: 	TokenID =  32	TokenTypeID =  5	lexeme = =
Found       NUMBER: 	TokenID =  33	TokenTypeID = 26	lexeme = 0
Found    SEPARATOR: 	TokenID =  34	TokenTypeID = 14	lexeme = )
Found    SEPARATOR: 	TokenID =  35	TokenTypeID = 15	lexeme = {
Found   IDENTIFIER: 	TokenID =  36	TokenTypeID = 27	lexeme = op
Found        RELOP: 	TokenID =  37	TokenTypeID =  5	lexeme = =
Found       NUMBER: 	TokenID =  38	TokenTypeID = 26	lexeme = 2.1
Found    SEPARATOR: 	TokenID =  39	TokenTypeID = 11	lexeme = ;
Found    SEPARATOR: 	TokenID =  40	TokenTypeID = 16	lexeme = }
Found  CONDITIONAL: 	TokenID =  41	TokenTypeID = 25	lexeme = else
Found    SEPARATOR: 	TokenID =  42	TokenTypeID = 15	lexeme = {
Found   IDENTIFIER: 	TokenID =  43	TokenTypeID = 27	lexeme = op
Found        RELOP: 	TokenID =  44	TokenTypeID =  5	lexeme = =
Found       NUMBER: 	TokenID =  45	TokenTypeID = 26	lexeme = 5.6
Found    SEPARATOR: 	TokenID =  46	TokenTypeID = 11	lexeme = ;
Found    SEPARATOR: 	TokenID =  47	TokenTypeID = 16	lexeme = }
Found       LOOPER: 	TokenID =  48	TokenTypeID = 21	lexeme = for
Found    SEPARATOR: 	TokenID =  49	TokenTypeID = 13	lexeme = (
Found   IDENTIFIER: 	TokenID =  50	TokenTypeID = 27	lexeme = i
Found        RELOP: 	TokenID =  51	TokenTypeID =  5	lexeme = =
Found       NUMBER: 	TokenID =  52	TokenTypeID = 26	lexeme = 0
Found    SEPARATOR: 	TokenID =  53	TokenTypeID = 11	lexeme = ;
Found   IDENTIFIER: 	TokenID =  54	TokenTypeID = 27	lexeme = i
Found        RELOP: 	TokenID =  55	TokenTypeID =  1	lexeme = <
Found   IDENTIFIER: 	TokenID =  56	TokenTypeID = 27	lexeme = n
Found    SEPARATOR: 	TokenID =  57	TokenTypeID = 11	lexeme = ;
Found   IDENTIFIER: 	TokenID =  58	TokenTypeID = 27	lexeme = i
Found   ARITHMETIC: 	TokenID =  59	TokenTypeID =  7	lexeme = +
Found   ARITHMETIC: 	TokenID =  60	TokenTypeID =  7	lexeme = +
Found    SEPARATOR: 	TokenID =  61	TokenTypeID = 14	lexeme = )
Found    SEPARATOR: 	TokenID =  62	TokenTypeID = 15	lexeme = {
Found    IN/OUTPUT: 	TokenID =  63	TokenTypeID = 19	lexeme = read
Found    SEPARATOR: 	TokenID =  64	TokenTypeID = 13	lexeme = (
Found   IDENTIFIER: 	TokenID =  65	TokenTypeID = 27	lexeme = x
Found    SEPARATOR: 	TokenID =  66	TokenTypeID = 14	lexeme = )
Found    SEPARATOR: 	TokenID =  67	TokenTypeID = 11	lexeme = ;
Found   IDENTIFIER: 	TokenID =  68	TokenTypeID = 27	lexeme = sum
Found   ARITHMETIC: 	TokenID =  69	TokenTypeID =  7	lexeme = +
Found        RELOP: 	TokenID =  70	TokenTypeID =  5	lexeme = =
Found   IDENTIFIER: 	TokenID =  71	TokenTypeID = 27	lexeme = x
Found    SEPARATOR: 	TokenID =  72	TokenTypeID = 11	lexeme = ;
Found   IDENTIFIER: 	TokenID =  73	TokenTypeID = 27	lexeme = op
Found   ARITHMETIC: 	TokenID =  74	TokenTypeID = 10	lexeme = /
Found        RELOP: 	TokenID =  75	TokenTypeID =  5	lexeme = =
Found    SEPARATOR: 	TokenID =  76	TokenTypeID = 13	lexeme = (
Found       NUMBER: 	TokenID =  77	TokenTypeID = 26	lexeme = 2.1E-5
Found   ARITHMETIC: 	TokenID =  78	TokenTypeID =  9	lexeme = *
Found   IDENTIFIER: 	TokenID =  79	TokenTypeID = 27	lexeme = op
Found    SEPARATOR: 	TokenID =  80	TokenTypeID = 14	lexeme = )
Found    SEPARATOR: 	TokenID =  81	TokenTypeID = 11	lexeme = ;
Found    SEPARATOR: 	TokenID =  82	TokenTypeID = 16	lexeme = }
Found    IN/OUTPUT: 	TokenID =  83	TokenTypeID = 20	lexeme = print
Found    SEPARATOR: 	TokenID =  84	TokenTypeID = 13	lexeme = (
Found   IDENTIFIER: 	TokenID =  85	TokenTypeID = 27	lexeme = x
Found    SEPARATOR: 	TokenID =  86	TokenTypeID = 14	lexeme = )
Found    SEPARATOR: 	TokenID =  87	TokenTypeID = 11	lexeme = ;
Found    SEPARATOR: 	TokenID =  88	TokenTypeID = 16	lexeme = }
Done with 21 lines
