Enter strings...
Found MAIN: Token_ID =   1	lexeme = main
Found SEPARATOR: Token_ID =   2	lexeme = (
Found SEPARATOR: Token_ID =   3	lexeme = )
Found SEPARATOR: Token_ID =   4	lexeme = {
Found DATATYPE: Token_ID =   5	lexeme = int
Found IDENTIFIER: Token_ID =   6	lexeme = i
Found RELOP: Token_ID =   7	lexeme = =
Found NUMBER: Token_ID =   8	lexeme = 0
Found SEPARATOR: Token_ID =   9	lexeme = ;
Found DATATYPE: Token_ID =  10	lexeme = int
Found IDENTIFIER: Token_ID =  11	lexeme = n
Found RELOP: Token_ID =  12	lexeme = =
Found NUMBER: Token_ID =  13	lexeme = 10
Found SEPARATOR: Token_ID =  14	lexeme = ;
Found DATATYPE: Token_ID =  15	lexeme = int
Found IDENTIFIER: Token_ID =  16	lexeme = sum
Found RELOP: Token_ID =  17	lexeme = =
Found NUMBER: Token_ID =  18	lexeme = 0
Found SEPARATOR: Token_ID =  19	lexeme = ;
Found DATATYPE: Token_ID =  20	lexeme = float
Found IDENTIFIER: Token_ID =  21	lexeme = op
Found RELOP: Token_ID =  22	lexeme = =
Found NUMBER: Token_ID =  23	lexeme = 1.5
Found SEPARATOR: Token_ID =  24	lexeme = ;
Found LOOPER: Token_ID =  25	lexeme = for
Found SEPARATOR: Token_ID =  26	lexeme = (
Found IDENTIFIER: Token_ID =  27	lexeme = i
Found RELOP: Token_ID =  28	lexeme = =
Found NUMBER: Token_ID =  29	lexeme = 0
Found SEPARATOR: Token_ID =  30	lexeme = ;
Found IDENTIFIER: Token_ID =  31	lexeme = i
Found RELOP: Token_ID =  32	lexeme = <
Found IDENTIFIER: Token_ID =  33	lexeme = n
Found SEPARATOR: Token_ID =  34	lexeme = ;
Found IDENTIFIER: Token_ID =  35	lexeme = i
Found ARITHMETIC: Token_ID =  36	lexeme = +
Found ARITHMETIC: Token_ID =  37	lexeme = +
Found SEPARATOR: Token_ID =  38	lexeme = )
Found SEPARATOR: Token_ID =  39	lexeme = {
Found INPUT/OUTPUT: Token_ID =  40	lexeme = read
Found SEPARATOR: Token_ID =  41	lexeme = (
Found IDENTIFIER: Token_ID =  42	lexeme = x
Found SEPARATOR: Token_ID =  43	lexeme = )
Found SEPARATOR: Token_ID =  44	lexeme = ;
Found IDENTIFIER: Token_ID =  45	lexeme = sum
Found ARITHMETIC: Token_ID =  46	lexeme = +
Found RELOP: Token_ID =  47	lexeme = =
Found IDENTIFIER: Token_ID =  48	lexeme = x
Found SEPARATOR: Token_ID =  49	lexeme = ;
Found IDENTIFIER: Token_ID =  50	lexeme = op
Found ARITHMETIC: Token_ID =  51	lexeme = /
Found RELOP: Token_ID =  52	lexeme = =
Found SEPARATOR: Token_ID =  53	lexeme = (
Found NUMBER: Token_ID =  54	lexeme = 2.1E-5
Found ARITHMETIC: Token_ID =  55	lexeme = *
Found IDENTIFIER: Token_ID =  56	lexeme = op
Found SEPARATOR: Token_ID =  57	lexeme = )
Found SEPARATOR: Token_ID =  58	lexeme = ;
Found SEPARATOR: Token_ID =  59	lexeme = }
Found INPUT/OUTPUT: Token_ID =  60	lexeme = print
Found SEPARATOR: Token_ID =  61	lexeme = (
Found IDENTIFIER: Token_ID =  62	lexeme = x
Found SEPARATOR: Token_ID =  63	lexeme = )
Found SEPARATOR: Token_ID =  64	lexeme = ;
Found SEPARATOR: Token_ID =  65	lexeme = }
Done with 14 lines
